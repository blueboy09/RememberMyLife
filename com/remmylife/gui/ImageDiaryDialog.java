/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.remmylife.gui;

import com.remmylife.diary.ImageDiary;
import com.remmylife.head.DiaryType;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Box;
import javax.swing.JFileChooser;
import javax.swing.JScrollPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author bestofme
 */
public class ImageDiaryDialog extends javax.swing.JDialog {

    /**
     * Creates new form NewImageDiaryDialog
     */
	private boolean uupdate = false;
	
    public ImageDiaryDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        setTitle("New Image Diary");
        jTextField1.setText("New Diary");
        
        dateCreated = new Date();
        
        initImageListView();
    }
    
    public ImageDiaryDialog(java.awt.Frame parent, boolean modal, ImageDiary diary) {
        super(parent, modal);
        initComponents();
        
        imageDiary = diary;
         
        setTitle(diary.getTitle());
        jTextField1.setText(diary.getTitle());
        jTextArea1.setText(diary.getNote());
        
        int length = diary.getImages().length;
        for (int i = 0; i < length; i++) {
            images.add(convertBytes2Image(diary.getImages()[i]));
        }
        refreshImageListView();
        
        initImageListView();
    }
    
    private Box box = Box.createVerticalBox();
    private ArrayList<BufferedImage> images = new ArrayList<>();
    private ArrayList<ImagePanel> imagePanels = new ArrayList<>();
    
    private ImageDiary imageDiary = null;
    
    private Date dateCreated = null;
    
    private void initImageListView() {
        jScrollPane2.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.getViewport().add(box);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jButton3 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jButton5 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("New Image Diary");
        setLocationByPlatform(true);
        setModal(true);
        setResizable(false);

        jLabel1.setText("Title :");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton3.setText("Add Images");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton5.setText("Delete Images");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton5))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // Button "Add Images" 
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Image(.jpg)","jpg");
        fileChooser.setFileFilter(filter);
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fileChooser.setMultiSelectionEnabled(true);
        fileChooser.setDialogTitle("Add Images");
        
        int result = fileChooser.showOpenDialog(this);
        if(result == JFileChooser.APPROVE_OPTION) { 
            File[] imageFiles = fileChooser.getSelectedFiles();
            for (File imageFile : imageFiles) {
                try {
                    BufferedImage image = ImageIO.read(imageFile);
                    images.add(image);
                } catch (IOException ex) {
                    Logger.getLogger(ImageDiaryDialog.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            refreshImageListView();
        }   
    }//GEN-LAST:event_jButton3ActionPerformed

    private void refreshImageListView() {
        box.removeAll();
        imagePanels.clear();
        /*if(images.size()<imageDiary.getImages().length){
        	System.out.println("hahahaha");
        	imageDiary.setImages(getImageBytes(images));
        	ImageDiary ti = new ImageDiary();
        	ti.setId(imageDiary.getId());
    		ti.setDate(imageDiary.getDate());
    		ti.setImageList(imageDiary.getImageList());
    		ti.setNote(imageDiary.getNote());
    		ti.setTitle(imageDiary.getTitle());
    		ti.setWeather(imageDiary.getWeather());
    		imageDiary = ti;
        }*/
        uupdate = true;
        if (images.size() > 0) {
            for (BufferedImage image : images) {
                ImagePanel imagePanel = new ImagePanel(image);
                imagePanels.add(imagePanel);
                box.add(imagePanel);
            }
        }
        jScrollPane2.getViewport().add(box);
    }
    
    private byte[][] getImageBytes(ArrayList<BufferedImage> images) {
        byte[][] imagesInBytes = new byte[images.size()][];
        for (int i = 0; i < images.size(); i++) {
            BufferedImage bufferedImage = images.get(i);
            ByteArrayOutputStream bos = new ByteArrayOutputStream();
            try {
                ImageIO.write(bufferedImage, "jpg", bos);
            } catch(IOException ioe) {
		//ioe.printStackTrace();
            }
	    imagesInBytes[i] = bos.toByteArray();
	}
        return imagesInBytes;
    }
    
    private BufferedImage convertBytes2Image(byte[] bytes) {
        ByteArrayInputStream in = new ByteArrayInputStream(bytes);
	BufferedImage image = null;
	try {
            image = ImageIO.read(in);
	} catch(IOException ioe) {
            //ioe.printStackTrace();
	}
        return image;
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // For Save Button
        
        UICommonData.Instance().diaryDialogExitStatus = UICommonData.ON_SAVE;
        
        if (imageDiary == null) {
            imageDiary = generateDiary();
            UICommonData.Instance().newAddedDiary = imageDiary;
            try {
				imageDiary.setId(UICommonData.Instance().diaryManager.addDiary(imageDiary));
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} 
        } else {
            localUpdateDiary(imageDiary);
            try {
				UICommonData.Instance().diaryManager.updateDiary(imageDiary);
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} 
        }
        
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private ImageDiary generateDiary() {   
        ImageDiary diary = new ImageDiary();
        diary.setDate(dateCreated);
        localUpdateDiary(diary);
        return diary;
    }
    
    private void localUpdateDiary(ImageDiary diary) {
        diary.setTitle(jTextField1.getText());
        diary.setType(DiaryType.IMAGE_DIARY);
        diary.setNote(jTextArea1.getText());
        diary.setImages(getImageBytes(images));
    }
    
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // For Cancel Button
        UICommonData.Instance().diaryDialogExitStatus = UICommonData.ON_CANCEL;
        
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // Button "Delete Iamges"
        ArrayList<BufferedImage> uselessImages = new ArrayList<>();
        for (ImagePanel imagePanel: imagePanels) {
            if (imagePanel.isSelected()) {
                uselessImages.add(imagePanel.getImage());
            }
        } 
        images.removeAll(uselessImages);
        //System.out.println("after delete "+imageDiary.getImages().length);
        //imageDiary.setImages(images);
        refreshImageListView();
    }//GEN-LAST:event_jButton5ActionPerformed

//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(NewImageDiaryDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(NewImageDiaryDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(NewImageDiaryDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(NewImageDiaryDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                ImageDiaryDialog dialog = new ImageDiaryDialog(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
//    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
